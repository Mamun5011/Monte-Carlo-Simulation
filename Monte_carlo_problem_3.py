# -*- coding: utf-8 -*-
"""Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import numpy as np
import random
DAYLIMIT = 100


def findDistance( mosquito_X,  mosquito_Y,  host_X,  host_Y):

    X1 = host_X - mosquito_X;
    X1=X1*X1;
    Y1 = host_Y - mosquito_Y;
    Y1=Y1*Y1;
    ans = np.sqrt(X1+Y1);
    return ans;


def isIntersect( a,b,c,x,y,radius):
    # Finding the distance of line from center.
     dist = (abs(a * x + b * y + c)) / np.sqrt(a * a + b * b);
  
     if ( dist<= radius):
        return True
     else:
        return False

def DoesLineTouchesCircle( prev_mosquito_X,  prev_mosquito_Y, mosquito_X, mosquito_Y,  host_X, host_Y,hostRadius):
    if(mosquito_X==prev_mosquito_X):
      left= (mosquito_X-host_X)*(mosquito_X-host_X)
      left = (hostRadius*hostRadius)-left
      if(left>=0):
        return True
      else:
        return False

    elif(mosquito_Y==prev_mosquito_Y):
      left = (mosquito_Y-host_Y)*(mosquito_Y-host_Y)
      left = (hostRadius*hostRadius)-left
      if(left>=0):
        return True
      else:
        return False

    else:
      m = (mosquito_Y-prev_mosquito_Y)/(mosquito_X-prev_mosquito_X)
      a = m
      b =-1
      c = prev_mosquito_Y- (m*prev_mosquito_X)
      return isIntersect(a,b,c,host_X,host_Y,hostRadius)




moveCount=0
inSideCircleDeath=0
outSideCircleDeath=0
numberOfRuns=3000
foundHost=0
days=np.zeros(101)
mosquito_X=0
mosquito_Y=0

host_X = input ("Enter the host  X Co-Ordinate :")
host_X = int(host_X)
host_Y = input ("Enter the host  X Co-Ordinate :")
host_Y = int(host_Y)



for i in range(1,numberOfRuns):

  day=1;
  mosquito_X=0;
  mosquito_Y=0;

  while(day<=DAYLIMIT):
      # initial position of the mosquito
      prev_mosquito_X = mosquito_X
      prev_mosquito_Y = mosquito_Y

      # choosing the direction of the mosquito and move 250 m
      randNum = random.uniform(0, 1);
      if(randNum<=.25):
        mosquito_X+=250;
      elif(randNum<=.50):
        mosquito_Y+=250;
      elif(randNum<=.75):
        mosquito_X-=250;
      else:
          mosquito_Y-=250;

      moveCount+=1

      # Mosquito smells a host within the range of 50m of the host

      if(DoesLineTouchesCircle( prev_mosquito_X,prev_mosquito_Y,mosquito_X,mosquito_Y, host_X,host_X,2500)):
      
          foundHost+=1
          days[day]+=1;
          break;
      
      # Mosquito does not find the host at this move
      else:
          day+=1

  # Mosquito does not find a host within 10 days, so she dies
  if(day>DAYLIMIT):

      if(findDistance(mosquito_X,mosquito_Y,0,0)>1000):
        outSideCircleDeath+=1
      else:
            inSideCircleDeath+=1




print("Total number of runs: ",numberOfRuns)
print("The probability that the mosquito will find the host before she dies: ",foundHost/numberOfRuns)
print("The probability that the mosquito will die outside the red region: ",outSideCircleDeath/numberOfRuns)
print("outSideCircleDeath",outSideCircleDeath,"  inSideCircleDeath ",inSideCircleDeath,"  foundhost ",foundHost)



